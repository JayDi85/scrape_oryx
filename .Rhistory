data <- indsn %>%
dplyr::filter(equipment_type==type_id) %>%
dplyr::rename(count = count_type) %>%
dplyr::select(country, equipment_type, count, date_recorded) %>%
dplyr::arrange(date_recorded)
g <- ggplot2::ggplot(data, ggplot2::aes(date_recorded, count, colour=country)) + ggplot2::geom_line() +
ggplot2::scale_x_date("Date", date_breaks="3 days", date_minor_breaks="1 day", date_labels = "%d %b %Y") + ggplot2::scale_y_continuous("Equipment Losses") +
ggthemes::geom_rangeframe() + ggthemes::theme_few() + ggplot2::guides(color=ggplot2::guide_legend(title="Country")) +
ggplot2::labs(title = glue::glue("Total Equipment Losses Through {format(lubridate::today(), '%B %d, %Y')}"), subtitle = glue::glue("Equipement Type: {type_id}"),
caption = "Data From: https://www.oryxspioenkop.com/2022/02/attack-on-europe-documenting-equipment.html") +
ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust=1))
g %>% ggplot2::ggsave(g, glue::glue("outputfiles/{type_id}_losses.png", device="png"))
}
gg = graph_counts(daily_count, "All Types", "type_total")
graph_counts <- function(indsn, type_id, count_type) {
data <- indsn %>%
dplyr::filter(equipment_type==type_id) %>%
dplyr::rename(count = count_type) %>%
dplyr::select(country, equipment_type, count, date_recorded) %>%
dplyr::arrange(date_recorded)
g <- ggplot2::ggplot(data, ggplot2::aes(date_recorded, count, colour=country)) + ggplot2::geom_line() +
ggplot2::scale_x_date("Date", date_breaks="3 days", date_minor_breaks="1 day", date_labels = "%d %b %Y") + ggplot2::scale_y_continuous("Equipment Losses") +
ggthemes::geom_rangeframe() + ggthemes::theme_few() + ggplot2::guides(color=ggplot2::guide_legend(title="Country")) +
ggplot2::labs(title = glue::glue("Total Equipment Losses Through {format(lubridate::today(), '%B %d, %Y')}"), subtitle = glue::glue("Equipement Type: {type_id}"),
caption = "Data From: https://www.oryxspioenkop.com/2022/02/attack-on-europe-documenting-equipment.html") +
ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust=1))
g + ggplot2::ggsave(glue::glue("outputfiles/{type_id}_losses.png", device = "png"))
}
gg = graph_counts(daily_count, "All Types", "type_total")
gg
graph_counts <- function(indsn, type_id, count_type) {
data <- indsn %>%
dplyr::filter(equipment_type == type_id) %>%
dplyr::rename(count = count_type) %>%
dplyr::select(country, equipment_type, count, date_recorded) %>%
dplyr::arrange(date_recorded)
g <- ggplot2::ggplot(data, ggplot2::aes(date_recorded, count, colour=country)) + ggplot2::geom_line() +
ggplot2::scale_x_date("Date", date_breaks="3 days", date_minor_breaks="1 day", date_labels = "%d %b %Y") + ggplot2::scale_y_continuous("Equipment Losses") +
ggthemes::geom_rangeframe() + ggthemes::theme_few() + ggplot2::guides(color=ggplot2::guide_legend(title="Country")) +
ggplot2::labs(title = glue::glue("Total Equipment Losses Through {format(lubridate::today(), '%B %d, %Y')}"), subtitle = glue::glue("Equipement Type: {type_id}"),
caption = "Data From: https://www.oryxspioenkop.com/2022/02/attack-on-europe-documenting-equipment.html") +
ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust=1))
return(g)
}
graph_counts <- function(indsn, type_id, count_type) {
data <- indsn %>%
dplyr::filter(equipment_type == type_id) %>%
dplyr::rename(count = count_type) %>%
dplyr::select(country, equipment_type, count, date_recorded) %>%
dplyr::arrange(date_recorded)
g <-
ggplot2::ggplot(data, ggplot2::aes(date_recorded, count, colour = country)) + ggplot2::geom_line() +
ggplot2::scale_x_date(
"Date",
date_breaks = "3 days",
date_minor_breaks = "1 day",
date_labels = "%d %b %Y"
) + ggplot2::scale_y_continuous("Equipment Losses", breaks = scales::pretty_breaks()) +
ggthemes::geom_rangeframe() + ggthemes::theme_few() + ggplot2::guides(color =
ggplot2::guide_legend(title = "Country")) +
ggplot2::labs(
title = glue::glue(
"Total Equipment Losses Through {format(lubridate::today(), '%B %d, %Y')}"
),
subtitle = glue::glue("Equipement Type: {type_id}"),
caption = "Data From: https://www.oryxspioenkop.com/2022/02/attack-on-europe-documenting-equipment.html"
) +
ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust =
1))
return(g)
}
gg = graph_counts(daily_count, "All Types", "type_total")
gg
library(renv)
library(rvest)
library(dplyr)
library(tidyr)
library(lubridate)
library(purrr)
library(magrittr)
library(tibble)
library(stringr)
library(readr)
library(glue)
library(logr)
library(kableExtra)
source("R/functions.R")
source("R/scrape_data.R")
source("R/totals_by_type.R")
source("R/per_event.R")
source("R/daily_count.R")
totals_by_system <- scrape_data()
daily_count <- daily_count()
graph_counts(daily_count, "All Types", "type_total")
graph_counts <- function(indsn, type_id, count_type) {
data <- indsn %>%
dplyr::filter(equipment_type == type_id) %>%
dplyr::mutate(lost = dplyr::case_when(
count_type == "Lost" ~ sum(destroyed, captured, abandoned),
as.numeric(count_type)
)) %>%
dplyr::rename(count = count_type) %>%
dplyr::select(country, equipment_type, count, date_recorded) %>%
dplyr::arrange(date_recorded)
g <-
ggplot2::ggplot(data, ggplot2::aes(date_recorded, count, colour = country)) + ggplot2::geom_line() +
ggplot2::scale_x_date(
"Date",
date_breaks = "3 days",
date_minor_breaks = "1 day",
date_labels = "%d %b %Y"
) + ggplot2::scale_y_continuous("Equipment Losses", breaks = scales::pretty_breaks()) +
ggthemes::geom_rangeframe() + ggthemes::theme_few() + ggplot2::guides(color =
ggplot2::guide_legend(title = "Country")) +
ggplot2::labs(
title = glue::glue(
"Total Equipment Losses Through {format(lubridate::today(), '%B %d, %Y')}"
),
subtitle = glue::glue("Equipement Type: {type_id}"),
caption = "Data From: https://www.oryxspioenkop.com/2022/02/attack-on-europe-documenting-equipment.html"
) +
ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust =
1))
return(g)
}
gg = graph_counts(daily_count, "All Types", "type_total")
gg = graph_counts(daily_count, "All Types", "Lost")
graph_counts <- function(indsn, type_id, count_type) {
data <- indsn %>%
dplyr::filter(equipment_type == type_id) %>%
dplyr::mutate(lost = dplyr::case_when(
count_type = "Lost" ~ sum(destroyed, captured, abandoned),
as.numeric(count_type)
)) %>%
dplyr::rename(count = count_type) %>%
dplyr::select(country, equipment_type, count, date_recorded) %>%
dplyr::arrange(date_recorded)
g <-
ggplot2::ggplot(data, ggplot2::aes(date_recorded, count, colour = country)) + ggplot2::geom_line() +
ggplot2::scale_x_date(
"Date",
date_breaks = "3 days",
date_minor_breaks = "1 day",
date_labels = "%d %b %Y"
) + ggplot2::scale_y_continuous("Equipment Losses", breaks = scales::pretty_breaks()) +
ggthemes::geom_rangeframe() + ggthemes::theme_few() + ggplot2::guides(color =
ggplot2::guide_legend(title = "Country")) +
ggplot2::labs(
title = glue::glue(
"Total Equipment Losses Through {format(lubridate::today(), '%B %d, %Y')}"
),
subtitle = glue::glue("Equipement Type: {type_id}"),
caption = "Data From: https://www.oryxspioenkop.com/2022/02/attack-on-europe-documenting-equipment.html"
) +
ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust =
1))
return(g)
}
gg = graph_counts(daily_count, "All Types", "Lost")
knitr::knit("index.Rmd")
#' @title scrape_oryx
#' @description A simple R script for extracting tabular data from Oryx' excellent
#'   post detailing materiel lost by all sides in the [Russian invasion of
#'   Ukraine](https://www.oryxspioenkop.com/2022/02/attack-on-europe-documenting-equipment.html).
#'
#'
#' @author Daniel Scarnecchia
#'
# Setup
library(renv)
library(rvest)
library(dplyr)
library(tidyr)
library(lubridate)
library(purrr)
library(magrittr)
library(tibble)
library(stringr)
library(readr)
library(glue)
library(logr)
library(ggplot2)
library(scales)
library(ggthemes)
source("R/functions.R")
source("R/scrape_data.R")
source("R/totals_by_type.R")
source("R/per_event.R")
source("R/daily_count.R")
tmp <-
file.path("outputfiles", sprintf("scrape_oryx_%s.log", format(Sys.time(), "%Y%m%dT%H%M%S")))
lf <- logr::log_open(tmp)
today <- format(Sys.Date(), "%Y-%m-%d")
totals_by_system <- scrape_data() %>%
readr::write_csv(., file = glue::glue("outputfiles/totals_by_system_{today}.csv"))
#' Write Event Tables
create_event_tables(totals_by_system, status)
totals_by_system_wide <- total_by_system_wide(totals_by_system) %>%
readr::write_csv(.,
file = glue::glue("outputfiles/totals_by_system_wide_{today}.csv"))
total_by_type <- totals_by_type() %>%
readr::write_csv(., file = glue::glue("outputfiles/totals_by_type_{today}.csv"))
daily_count <- daily_count() %>%
readr::write_csv(., file = "outputfiles/daily_count.csv")
knitr::knit("index.Rmd")
logr::log_code()
logr::log_close()
writeLines(readLines(lf))
renv::snapshot()
View(running_count)
View(daily_counts)
View(daily_count)
View(daily_count)
daily_count %>% dplyr::filter(date_recorded = "2022-03-26") %>%
dplyr::select(1:8)
daily_count %>% dplyr::filter(date_recorded == "2022-03-26") %>%
dplyr::select(1:8)
daily_count %>% dplyr::filter(date_recorded == "2022-03-26") %>%
dplyr::select(1:8)%>%
write.csv("inputfiles/daily_count_baseline.csv")
baseline <- readr::read_csv("inputfiles/daily_count_baseline.csv")
View(baseline)
baseline <- readr::read_csv("inputfiles/daily_count_baseline_2.csv")
baseline %> write.csv("inputfiles/daily_count_baseline2.csv")
baseline %>% write.csv("inputfiles/daily_count_baseline2.csv")
View(total_by_type)
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv")
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23")) %>%
dplyr::bind_rows(readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv"))
View(baseline)
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23")) %>%
dplyr::bind_rows(readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv")) %>%
dplyr::mutate(date_recorded = as.Date("2022-03-19"))
View(baseline)
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23")) %>%
dplyr::bind_rows(readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv"))
dplyr::mutate(dplyr::across(where(is.Date), ~ dplyr::replace_na("2022-03-19")))
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23")) %>%
dplyr::bind_rows(readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv"))
dplyr::mutate(dplyr::across(where(is.Date), ~., dplyr::replace_na("2022-03-19")))
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23")) %>%
dplyr::bind_rows(readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv"))
dplyr::mutate(dplyr::across(where(is.Date), ~., as.Date(tidyr::replace_na("2022-03-19"))))
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23")) %>%
dplyr::bind_rows(readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv")) %>%
dplyr::mutate(dplyr::across(where(is.Date), ~., as.Date(tidyr::replace_na("2022-03-19"))))
View(baseline)
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23")) %>%
dplyr::bind_rows(readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv")) %>%
dplyr::mutate(dplyr::across(., ~ as.Date(tidyr::replace_na("2022-03-19"))))
View(baseline)
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23")) %>%
dplyr::bind_rows(readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv")) %>%
dplyr::mutate(dplyr::across(where(is.Date), ~ as.Date(tidyr::replace_na(.x, "2022-03-19"))))
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23")) %>%
dplyr::bind_rows(readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv")) %>%
dplyr::mutate(dplyr::across(where(is.Date), ~ tidyr::replace_na(.x, "2022-03-19")))
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23")) %>%
dplyr::bind_rows(readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv")) %>%
dplyr::mutate(date_recorded = tidyr::replace_na("2022-03-19")
)
View(baseline)
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23")) %>%
dplyr::bind_rows(readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv")) %>%
tidyr::replace_na(date_recorded, "2022-03-19")
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23")) %>%
dplyr::bind_rows(readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv"))
View(baseline)
?tidyr::replace_na
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23")) %>%
dplyr::bind_rows(readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv")) %>%
dplyr::mutate(date_recorded = as.Date(tidyr::replace_na("2022-03-19")))
View(baseline)
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23"))
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23"))
baseline2 <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv")) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23")) %>%
dplyr::bind_rows(baseline)
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23"))
baseline2 <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(date_recorded = as.Date("2022-03-19")) %>%
dplyr::bind_rows(baseline)
View(baseline2)
baseline2 <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(date_recorded = as.Date("2022-03-19")) %>%
dplyr::bind_rows(baseline) %>%
dplyr::arrange(country, date_recorded)
baseline2 <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(date_recorded = as.Date("2022-03-19")) %>%
dplyr::bind_rows(baseline) %>%
dplyr::arrange(country, date_recorded) %>%
write.csv("inputfiles/daily_count_baseline.csv")
baseline3 <- readr::read_csv("inputfiles/daily_count_baseline.csv")
baseline2 <- dplyr::bind_rows(baseline3)
baseline3 <- readr::read_csv("inputfiles/daily_count_baseline2.csv")
baseline2 <- dplyr::bind_rows(baseline3)
baseline2 <- readr::read_csv("inputfiles/daily_count_baseline.csv")
baseline3 <- readr::read_csv("inputfiles/daily_count_baseline2.csv")
baseline2 <- baseline2 %>% dplyr::bind_rows(baseline3)
View(baseline2)
baseline2 <- baseline2 %>% dplyr::bind_rows(baseline3) %>%
dplyr::select(2:9)
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~., 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23"))
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~ 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23"))
baseline2 <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(date_recorded = as.Date("2022-03-19")) %>%
dplyr::bind_rows(baseline) %>%
dplyr::arrange(country, date_recorded) %>%
write.csv("inputfiles/daily_count_baseline.csv")
baseline2 <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(date_recorded = as.Date("2022-03-19")) %>%
dplyr::bind_rows(baseline)
baseline2 <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(date_recorded = as.Date("2022-03-19")) %>%
dplyr::bind_rows(baseline) %>%
dplyr::arrange(country, date_recorded) %>%
write.csv("inputfiles/daily_count_baseline.csv")
baseline2 <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(date_recorded = as.Date("2022-03-19")) %>%
dplyr::bind_rows(baseline) %>%
dplyr::arrange(country, date_recorded) %>%
readr::write.csv("inputfiles/daily_count_baseline.csv")
baseline2 <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(date_recorded = as.Date("2022-03-19")) %>%
dplyr::bind_rows(baseline) %>%
dplyr::arrange(country, date_recorded) %>%
readr::write_csv("inputfiles/daily_count_baseline.csv")
baseline3 <- readr::read_csv("inputfiles/daily_count_baseline2.csv")
baseline2 <- baseline2 %>% dplyr::bind_rows(baseline3)
View(baseline2)
baseline3 <- readr::read_csv("inputfiles/daily_count_baseline2.csv")
baseline2 <- baseline2 %>% dplyr::bind_rows(baseline3) %>%
dplyr::select(1:8)
View(baseline2)
baseline2 <- baseline2 %>% dplyr::bind_rows(baseline3) %>%
dplyr::select(1:8) %>%
dplyr::arrange(country, equipment_type, date_recorded)
View(baseline2)
baseline <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~ 0)) %>%
dplyr::mutate(date_recorded = as.Date("2022-02-23"))
baseline2 <- readr::read_csv("outputfiles/totals_by_type_2022-03-19.csv") %>%
dplyr::mutate(date_recorded = as.Date("2022-03-19")) %>%
dplyr::bind_rows(baseline) %>%
dplyr::arrange(country, date_recorded) %>%
readr::write_csv("inputfiles/daily_count_baseline.csv")
baseline3 <- readr::read_csv("inputfiles/daily_count_baseline2.csv")
baseline2 <- baseline2 %>% dplyr::bind_rows(baseline3) %>%
dplyr::select(1:8) %>%
dplyr::arrange(country, equipment_type, date_recorded)
View(baseline2)
baseline2 %>% readr::write_csv("inputfiles/daily_count_baseline.csv")
daily_count <- daily_count() %>%
readr::write_csv(., file = "outputfiles/daily_count.csv")
source("R/daily_count.R")
daily_count <- daily_count() %>%
readr::write_csv(., file = "outputfiles/daily_count.csv")
View(daily_count)
today()
daily_count <- function() {
baseline <- readr::read_csv("inputfiles/daily_count_baseline.csv")
today_total <- totals_by_type() %>%
dplyr::mutate(date_recorded = as.Date(today())) %>%
dplyr::bind_rows(baseline) %>%
write.csv("inputfiles/daily_count_baseline.csv")
baseline %>%
dplyr::bind_rows(today_total) %>%
dplyr::group_by(country, equipment_type) %>%
dplyr::arrange(country, equipment_type, date_recorded) %>%
readr::write_csv("inputfiles/daily_count_baseline.csv")
running_count <- baseline %>%
dplyr::bind_rows(today_total) %>%
dplyr::group_by(country, equipment_type) %>%
dplyr::arrange(country, equipment_type, date_recorded) %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~ .x - dplyr::lag(.x), .names =
"{.col}_diff")) %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~ tidyr::replace_na(.x, 0)))
return(running_count)
}
daily_count <- daily_count() %>%
readr::write_csv(., file = "outputfiles/daily_count.csv")
View(daily_count)
View(daily_counts)
daily_count <- function() {
baseline <- readr::read_csv("inputfiles/daily_count_baseline.csv")
today_total <- totals_by_type() %>%
dplyr::mutate(date_recorded = as.Date(today()))
baseline %>%
dplyr::bind_rows(today_total) %>%
dplyr::group_by(country, equipment_type) %>%
dplyr::arrange(country, equipment_type, date_recorded) %>%
readr::write_csv("inputfiles/daily_count_baseline.csv")
running_count <- baseline %>%
dplyr::bind_rows(today_total) %>%
dplyr::group_by(country, equipment_type) %>%
dplyr::arrange(country, equipment_type, date_recorded) %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~ .x - dplyr::lag(.x), .names =
"{.col}_diff")) %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~ tidyr::replace_na(.x, 0)))
return(running_count)
}
daily_count <- daily_count() %>%
readr::write_csv(., file = "outputfiles/daily_count.csv")
View(daily_count)
?renv::hydrate
dates <- unique(daily_count)
View(dates)
dates <- unique(daily_count$date_recorded)
dates <-
unique(daily_count$date_recorded, daily_count$type_total)
dates <-
unique(c(daily_count$date_recorded, daily_count$type_total))
dates
dates <-
unique(daily_count$date_recorded, daily_count$type_total)
dates
dates <-
unique(daily_count$date_recorded + daily_count$type_total)
dates
dates <- as.tibble()
dates <- as_tibble()
check <- baseline %>%
dplyr::anti_join(baseline, totals_today)
check <- baseline %>%
dplyr::anti_join(baseline, today_total)
check <- baseline %>%
dplyr::anti_join(today_total)
View(check)
?dplyr::anti_join
check <- baseline %>%
dplyr::semi_join(today_total)
View(check)
baseline <- readr::read_csv("inputfiles/daily_count_baseline.csv")
today_total <- totals_by_type() %>%
dplyr::mutate(date_recorded = as.Date(today()))
View(today_total)
check <- baseline %>%
dplyr::anti_join(today_total)
View(check)
View(today_total)
check <- baseline %>%
dplyr::anti_join(today_total)
View(check)
check <- baseline %>%
dplyr::anti_join(today_total, by=c("country", "equipment_type", "destroyed", "abandoned", "captured", "damaged", "type_total"))
View(check)
View(baseline)
check <- baseline %>%
dplyr::anti_join(today_total, by = c("country", "equipment_type", "destroyed", "abandoned", "captured", "damaged", "type_total"))
check <- today_total %>%
dplyr::anti_join(baseline, by = c("country", "equipment_type", "destroyed", "abandoned", "captured", "damaged", "type_total"))
View(check)
daily_count <- function() {
baseline <- readr::read_csv("inputfiles/daily_count_baseline.csv")
today_total <- totals_by_type() %>%
dplyr::mutate(date_recorded = as.Date(today()))
check <- today_total %>%
dplyr::anti_join(baseline, by = c("country", "equipment_type", "destroyed", "abandoned", "captured", "damaged", "type_total"))
if (length(check) > 0) {
baseline %>%
dplyr::bind_rows(check) %>%
dplyr::group_by(country, equipment_type) %>%
dplyr::arrange(country, equipment_type, date_recorded) %>%
readr::write_csv("inputfiles/daily_count_baseline.csv")
running_count <- baseline %>%
dplyr::bind_rows(check) %>%
dplyr::group_by(country, equipment_type) %>%
dplyr::arrange(country, equipment_type, date_recorded) %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~ .x - dplyr::lag(.x), .names =
"{.col}_diff")) %>%
dplyr::mutate(dplyr::across(where(is.numeric), ~ tidyr::replace_na(.x, 0)))
return(running_count)
} else {
return(baseline)
}
}
